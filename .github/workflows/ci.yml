name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools-scm

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libglew-dev \
          libosmesa6-dev \
          libglu1-mesa-dev \
          libglib2.0-0 \
          libsm6 \
          libxext6 \
          libxrender-dev \
          libgomp1 \
          xvfb \
          patchelf \
          libxml2-dev \
          libxslt1-dev \
          libgtk-3-dev \
          libavcodec-dev \
          libavformat-dev \
          libswscale-dev

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: linux-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          linux-pip-${{ matrix.python-version }}-
          linux-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install package with test dependencies (JAX is optional for pose optimization)
        pip install -e ".[test]"

    - name: Run tests
      run: |
        # Set environment variables to disable rendering completely
        export MUJOCO_GL=disable
        export SDL_VIDEODRIVER=dummy
        export LIBGL_ALWAYS_SOFTWARE=1
        export GALLIUM_DRIVER=softpipe

        # Run tests
        pytest --cov=metamachine --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ubuntu-latest-pip-lint-${{ hashFiles('pyproject.toml') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run black
      run: black --check --diff metamachine/ tests/

    - name: Run isort
      run: isort --check-only --diff metamachine/ tests/

    - name: Run ruff
      run: ruff check metamachine/ tests/

    # - name: Run mypy
    #   run: mypy metamachine/

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools-scm

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
